<?xml version="1.0" encoding="UTF-8" standalone="no" ?>


<service xmlns="http://www.n-able.com" author="twiser@orchidit.com" creationdate="02/19/2015" organization="N-able Technologies" syntaxversion="1.1.0.0" version="1.0.1.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">


	<servicedefinition id="260785" reason="" releasedependency="4.5.0.0" servicetype="AMP" version="1.0.1.0">
		<description country="ca" language="en"/>
		<displayname country="ca" language="en">Agent Installer Script Status</displayname>
		<displaylabel>Agent Installer Script Status</displaylabel>
		<help country="ca" language="en">Agent Installer Script Status</help>
		<popuphelp country="ca" language="en">Agent Installer Script Status</popuphelp>


		<serviceparameters aggregatedata="false" aggregatetasks="false" maxinstances="100" maxpollrate="60" minpollrate="0" schedulertype="Quartz Based Scheduler" serviceinstancetype="Multiple" timetostale="60" usesstockserviceitem="false"/>


		<moduleparameters>


		
			<moduleparameter key="scan_interval" max="1440" min="0" phardcoded="false" preferredident="0" foruseby="3" type="2" value="0 0/5 * * * ? *">
				<shortdescription country="ca" language="en">Scan Interval</shortdescription>
				<longdescription country="ca" language="en">Scan Interval</longdescription>
				<help country="ca" language="en">The number of minutes between scans.</help>
			</moduleparameter>
			<moduleparameter key="selectedAutomationPolicy" max="1440" min="0" phardcoded="true" preferredident="0" foruseby="3" type="2" value="1536389762">
				<shortdescription country="ca" language="en">Automation Manager Policy</shortdescription>
				<longdescription country="ca" language="en">Automation Manager Policy</longdescription>
				<help country="ca" language="en"/>
			</moduleparameter>
			<moduleparameter key="serviceIdentifier" max="1440" min="0" phardcoded="false" preferredident="1" foruseby="3" type="2" value="">
				<shortdescription country="ca" language="en">Service Identifier</shortdescription>
				<longdescription country="ca" language="en">Service Identifier</longdescription>
				<help country="ca" language="en"/>
			</moduleparameter>
		</moduleparameters>



		<scandetails>
			<scandetailid>3937400</scandetailid>
			<scandetailid>3937401</scandetailid>
			<scandetailid>3937402</scandetailid>
			<scandetailid>3937403</scandetailid>
			<scandetailid>3937404</scandetailid>
			<scandetailid>3937405</scandetailid>
		</scandetails>
	</servicedefinition>



	<scandetail id="3937400" monitoringtypeon="true" processforstate="true" cookid="5" releasedependency="9.5.1.243" version="1.0.0.0" >
		<thresholddefaults>
			<thresholds configurable="true" type="String"><threshold high="1" low="1" streval="contain" strvalue=":" state="Normal"/><threshold high="0" low="0" streval="contain" strvalue=":" state="Failed"/>
			</thresholds>
		</thresholddefaults>
		<description country="ca" language="en">Date/time of last execution</description>
		<displayname country="ca" language="en">SD260785_LastRun</displayname>
	</scandetail>



	<scandetail id="3937401" monitoringtypeon="true" processforstate="true" cookid="5" releasedependency="9.5.1.243" version="1.0.0.0" >
		<thresholddefaults>
			<thresholds configurable="true" type="String"><threshold high="1" low="1" streval="contain" strvalue="\" state="Normal"/><threshold high="0" low="0" streval="contain" strvalue="\" state="Failed"/>
			</thresholds>
		</thresholddefaults>
		<description country="ca" language="en">Path to installer files</description>
		<displayname country="ca" language="en">SD260785_Path</displayname>
	</scandetail>



	<scandetail id="3937402" monitoringtypeon="true" processforstate="true" cookid="5" releasedependency="9.5.1.243" version="1.0.0.0" >
		<thresholddefaults>
			<thresholds configurable="true" type="String"><threshold high="1" low="1" streval="match" strvalue="3.14" state="Normal"/><threshold high="0" low="0" streval="match" strvalue="3.14" state="Warning"/>
			</thresholds>
		</thresholddefaults>
		<description country="ca" language="en">Script version</description>
		<displayname country="ca" language="en">SD260785_Version</displayname>
	</scandetail>



	<scandetail id="3937403" monitoringtypeon="true" processforstate="true" cookid="5" releasedependency="9.5.1.243" version="1.0.0.0" >
		<thresholddefaults>
			<thresholds configurable="true" type="String"><threshold high="1" low="1" streval="contain" strvalue=":" state="Normal"/><threshold high="0" low="0" streval="contain" strvalue=":" state="Failed"/>
			</thresholds>
		</thresholddefaults>
		<description country="ca" language="en">Last successful completion</description>
		<displayname country="ca" language="en">SD260785_LastSuccessfulRun</displayname>
	</scandetail>



	<scandetail id="3937404" monitoringtypeon="true" processforstate="true" cookid="22" releasedependency="9.5.1.243" version="1.0.0.0" >
		<thresholddefaults>
			<thresholds configurable="true" type="Float"><threshold high="10" low="10" streval="" strvalue="" state="Normal"/><threshold high="9" low="1" streval="" strvalue="" state="Warning"/><threshold high="0" low="0" streval="" strvalue="" state="Failed"/>
			</thresholds>
		</thresholddefaults>
		<description country="ca" language="en">Last result code</description>
		<displayname country="ca" language="en">SD260785_LastOperation</displayname>
	</scandetail>



	<scandetail id="3937405" monitoringtypeon="true" processforstate="true" cookid="5" releasedependency="9.5.1.243" version="1.0.0.0" >
		<thresholddefaults>
			<thresholds configurable="true" type="String"><threshold high="1" low="1" streval="contain" strvalue="Unattended" state="Normal"/><threshold high="0" low="0" streval="contain" strvalue="Unattended" state="Warning"/>
			</thresholds>
		</thresholddefaults>
		<description country="ca" language="en">Last execution mode</description>
		<displayname country="ca" language="en">SD260785_LastMode</displayname>
	</scandetail>


	<automationmanagerpolicy name="InstallAgent status (1)" description="Reads the status of the InstallAgent script." itemuuid="b01545bc-887e-4cae-a0e7-52944d0fbb1a" category="0" uploaddate="2015-02-11 10:49:59">
		<ampdata></ampdata>
	</automationmanagerpolicy>

</service>
<?N-able-SDK version=3.0?>